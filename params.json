{"name":"Pat the Campfire Bot","body":"# Pat the Campfire Bot\r\n\r\nIs what it is, does what it says. In the days before [hubot](http://hubot.github.com) we had to write our own campfire bots and we liked it.\r\n\r\nnode.js so that it runs on Heroku. What do you know about bacon strips?\r\n\r\nThere are lots of dangling features, some extraneous code and the tests and\r\nspecs are more like sanity checks. Feel free to ignore anything ugly. \r\n\r\nThis is my, \"hey, I should learn node.js\" project and most of it was written in\r\na burst of activity over the weekend of 2011-07-23.\r\n \r\n## dependencies\r\n\r\nPat the bot is developed against: \r\n\r\n* Javascript\r\n  * node - 0.4.7\r\n  * npm - 1.0.18\r\n  * underscore - 1.1.7\r\n  * dom-js - 0.0.1\r\n  * mongoose - 1.7.3\r\n  * jasmine-node - 1.0.6 (development)\r\n* Ruby\r\n  * heroku - 2.3.6\r\n  * foreman - 0.18.0\r\n\r\n## setup\r\n\r\n### local\r\n\r\n#### 1. install node\r\n\r\nmake sure you have node installed. **Version 0.4.7** if you want to run on heroku. \r\n\r\n    brew install node -v0.4.7\r\n\r\nDo whatever it says to get your `NODE_PATH` env variable set up.\r\n\r\n#### 2. install [npm](http://npmjs.org/)\r\n\r\nrun the script, that should be enough to get started.\r\n\r\n#### 3. clone the repo\r\n\r\nthat's a secret\r\n\r\n#### 4. install dependencies\r\n\r\nI think you cd into the project directory and type `npm install .`. Not sure, but \r\nI have them installed, so maybe that worked? YMMV. \r\n\r\nTo install mongo, all I did was `brew install mongo` and everything just worked.\r\n\r\n#### 5. (optional) heroku support\r\n\r\nYou'll need ruby for this. Get it. I recommend [rvm](http://rvm.beginrescueend.com/).\r\n\r\n1. `gem install heroku`\r\n2. `gem install foreman`\r\n\r\nThat's all.\r\n\r\n### heroku\r\n\r\n1. `git push heroku master`\r\n2. setup 30m ping on http://www.montastic.com/ to make sure the app doesn't get shut off. Heroku \r\nautomatically turns off any dynos that haven't had a request in the last hour.\r\n\r\n## hacking\r\n\r\n### local env\r\n\r\nI keep a .profile file in my project directory and source it in my shell before\r\nI start working. This lets me keep private stuff out of the code. It looks like this:\r\n\r\n    export campfire_bot_token=12345thisisthetokencampfiregavemeweirdhuh\r\n    export campfire_bot_account=zoomakroom\r\n    export campfire_bot_room=100000     # staging\r\n    # export campfire_bot_room=900000   # production\r\n    export campfire_logging_room=100000 # bot chatter\r\n    export PATH=$(npm bin):$PATH\r\n\r\nI think that last PATH=$(npm bin):$PATH line is what keeps me, node, foreman,\r\nand npm happy in my local dev environment.\r\n\r\nWherever you deploy, you'll need those four `campfire_*` environment variables.\r\n\r\n### running the app\r\n\r\nCode you write lives in src/. Everything in lib/ is either straight vendored,\r\nor generated by `cake build` or `foreman start coffee`.\r\n\r\nWhen working on the code, running `foreman start coffee` is recommended to make\r\nsure lib/ stays up to date. To run the application, run `node lib/bot.js` or\r\n`foreman start web`. Plain `foreman start` will run the coffee script updater and \r\nthe web service, but the code won't be up to date when it starts (race condition) \r\nand the application server doesn't auto-load updated modules. So, you'll have to \r\nstop and restart the server to see your changes.\r\n\r\n### plugins\r\n\r\nPlugins live in `src/plugins`. All plugins export an object with a `listen`\r\nproperty which is a function. A basic echo plugin would look like this: \r\n\r\n`src/plugins/echo.coffee`\r\n\r\n    module.exports = \r\n      listen: (message, room) -> room.speak(message.body, console.log)\r\n\r\nThe listen method should take two arguments, `message` the message object\r\nhanded over from Campfire and `room`, the Campfire room the message came from.\r\n\r\nIf you want to access the storage classes (User, Quote, Counter, etc.) you will\r\nhave to require `./lib/store` in the plugin. Take a look at\r\n`src/plugins/phrases.coffee` for an example.\r\n\r\n- - -\r\n\r\nBased on [\"Quack-Bot: a campfire bot for Quick Left\"](http://quickleft.com/blog/building-quick-bot)","tagline":"A Campfire chat bot in node.js, intended to run on Heroku. Built for internal use at Figure53 but you might like it..","google":"UA-3540787-5","note":"Don't delete this file! It's used internally to help with page regeneration."}