// Generated by CoffeeScript 1.3.3
(function() {
  var PluginNotifier, chat_responders, fs, logger, util, web_responders, _;

  fs = require('fs');

  util = require('util');

  _ = require('underscore')._;

  chat_responders = [];

  web_responders = [];

  logger = function(d) {
    if (d.message) {
      return console.log("" + d.message.created_at + ": " + d.message.body);
    }
  };

  PluginNotifier = (function() {

    function PluginNotifier(plugins, services) {
      this.plugins = plugins;
      this.services = services;
    }

    PluginNotifier.prototype.http_notify = function(request, response) {
      var service, _i, _len, _ref;
      _ref = this.services;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        service = _ref[_i];
        if (service.http_listen(request, response, logger)) {
          return true;
        }
      }
    };

    PluginNotifier.prototype.notify = function(message, room) {
      var plugin, _i, _len, _ref, _results;
      _ref = this.plugins;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        plugin = _ref[_i];
        try {
          _results.push(plugin.listen(message, room, logger));
        } catch (ex) {
          _results.push(console.error("ERROR BUG FIXME: " + ex.message));
        }
      }
      return _results;
    };

    return PluginNotifier;

  })();

  fs.readdirSync(__dirname).forEach(function(file) {
    var plugin;
    if (/^\./.test(file)) {
      return;
    }
    plugin = require("./" + file);
    if (plugin.listen) {
      console.log("loading plugin " + plugin.name);
      chat_responders.push(plugin);
    }
    if (plugin.http_listen) {
      console.log("loading service " + plugin.name);
      return web_responders.push(plugin);
    }
  });

  console.log("loading " + chat_responders.length + " chat plugins and " + web_responders.length + " http plugins from " + __dirname);

  module.exports = new PluginNotifier(chat_responders, web_responders);

}).call(this);
