// Generated by CoffeeScript 1.3.3
(function() {
  var SpeakOnce, curl, getClientIp, qs, util, _;

  util = require('util');

  curl = require('../vendor/simple_http').curl;

  SpeakOnce = require('../vendor/speak_once').SpeakOnce;

  _ = require('underscore')._;

  qs = require('querystring');

  getClientIp = function(request) {
    var forwardedIps, forwardedIpsStr, ipAddress;
    forwardedIpsStr = request.headers['x-forwarded-for'];
    if (forwardedIpsStr) {
      forwardedIps = forwardedIpsStr.split(',');
      ipAddress = forwardedIps[0];
    }
    if (!ipAddress) {
      ipAddress = request.connection.remoteAddress;
    }
    return ipAddress;
  };

  module.exports = {
    name: "Webhook Inspector",
    http_listen: function(request, response, logger) {
      var clientIp, data;
      if (/\/webhook-inspector/i.test(request.url)) {
        console.log("/webhook-inspector got a " + request.method + " message!");
        console.log(util.inspect(request));
        clientIp = getClientIp(request);
        response.writeHead(200, {
          'Content-Type': 'text/html'
        });
        response.end("okay " + clientIp);
        data = "";
        request.on('data', function(incoming) {
          return data += incoming;
        });
        return request.on('end', function() {
          return new SpeakOnce(function(room) {
            if (data.length > 0) {
              room.speak("I received a " + request.method + " request on " + request.headers.host + request.url + " from " + clientIp + ", it is " + data.length + " bytes.", logger);
              return room.paste(data, logger);
            }
          });
        });
      }
    },
    listen: function() {}
  };

}).call(this);
