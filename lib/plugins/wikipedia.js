// Generated by CoffeeScript 1.8.0
(function() {
  var curl, qs, util, wikipedia_host, _;

  util = require('util');

  _ = require('underscore')._;

  qs = require('querystring');

  curl = require('../vendor/simple_http').curl;

  wikipedia_host = 'en.wikipedia.org';

  module.exports = {
    name: "Wikipedia",
    listen: function(message, room, logger) {
      var body, options, pattern, patterns, phrase, quoted;
      body = message.body;
      patterns = [/look up(:)? (.+)$/i, /what is( a| an)? ([^?]+)\??$/i];
      if (/^pat/i.test(body) && _.any(patterns, function(pattern) {
        return pattern.test(body);
      })) {
        pattern = _.find(patterns, function(pattern) {
          return pattern.test(body);
        });
        phrase = body.match(pattern);
        if (!(phrase && phrase[2].length)) {
          room.speak("I can't tell what you want me to look up :(", logger);
          return;
        }
        phrase = phrase[2];
        quoted = /"([^"]+)"/;
        if (quoted.test(phrase)) {
          phrase = phrase.match(quoted)[1];
        }
        console.log("looking up \"" + phrase + "\" on wikipedia");
        options = {
          host: wikipedia_host,
          path: "/w/api.php",
          params: {
            action: 'query',
            format: 'json',
            prop: 'extracts',
            exintro: true,
            explaintext: true,
            titles: phrase
          }
        };
        console.log("hitting wikipedia with params: " + (qs.stringify(options.params)));
        return curl(options, function(data) {
          var content, e, out, page, results, wikiUrl, _ref, _results;
          console.log("RAW RESPONSE:");
          console.log(data);
          try {
            results = JSON.parse(data);
            out = "";
            console.log("got pages " + JSON.stringify(results.query.pages));
            _ref = results.query.pages;
            _results = [];
            for (page in _ref) {
              content = _ref[page];
              console.log("got response on page " + page);
              console.log(util.inspect(content));
              if (content.extract != null) {
                room.speak(content.extract, logger);
                wikiUrl = "http://" + wikipedia_host + "/wiki/" + (qs.escape(content.title.replace(' ', '_')));
                _results.push(room.speak(wikiUrl, logger));
              } else if (content.invalid != null) {
                _results.push(room.speak("Wikipedia didn't know how to handle that one :(", logger));
              } else if (content.missing != null) {
                _results.push(room.speak("I checked Wikipedia but couldn't find anything, sorry.", logger));
              } else {
                _results.push(void 0);
              }
            }
            return _results;
          } catch (_error) {
            e = _error;
            return room.speak("there was a problem :( \"" + e.message + "\"", logger);
          }
        });
      }
    }
  };

}).call(this);
