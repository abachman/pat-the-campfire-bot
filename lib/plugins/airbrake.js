// Generated by CoffeeScript 1.3.3
(function() {
  var SpeakOnce, curl, getClientIp, util, _, _ref;

  util = require('util');

  _ref = require('../vendor/simple_http'), curl = _ref.curl, getClientIp = _ref.getClientIp;

  SpeakOnce = require('../vendor/speak_once').SpeakOnce;

  _ = require('underscore')._;

  module.exports = {
    name: "Airbrake Webhook",
    http_listen: function(request, response, logger) {
      var clientIp, data;
      if (/\/airbrake-webhook/i.test(request.url)) {
        clientIp = getClientIp(request);
        console.log("/airbrake-webhook got a " + request.method + " message from " + clientIp);
        data = "";
        request.on('data', function(incoming) {
          return data += incoming;
        });
        return request.on('end', function() {
          var error, error_message, imcoming, incoming;
          response.writeHead(200, {
            'Content-Type': 'text/html'
          });
          response.end("okay " + clientIp);
          imcoming = null;
          try {
            incoming = JSON.parse(data);
          } catch (e) {
            console.log("[airbrake] error parsing airbrake data, bailing. :(");
            console.log("[airbrake] " + e.message);
            return false;
          }
          try {
            console.log(util.inspect(incoming));
            error = incoming.error;
            error_message = "            error message:    " + error.error_message + "\n            in file:          " + error.file + ":" + error.line_number + "\n            request url:      " + error.last_notice.request_url + "\n            first occurrance: " + error.first_occurred_at + "\n            times occcurred:  " + error.times_occurred + "\n\n            http://airbrake.io/errors/" + error.id + "\n          ";
            error_message = error_message.replace(/^[ \t]+/gm, '');
            return new SpeakOnce(function(room) {
              if (data.length > 0) {
                room.speak("[" + error.project.name + "] Airbrake is reporting an error!");
                return _.delay((function() {
                  return room.paste(error_message);
                }), 500);
              }
            });
          } catch (e) {
            console.log("[airbrake] error converting JSON to error message, bailing :(");
            return console.log("[airbrake] " + e.message);
          }
        });
      }
    }
  };

}).call(this);
