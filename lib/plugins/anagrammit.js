// Generated by CoffeeScript 1.8.0
(function() {
  var anagrammit_host, anagrammit_port, anagrammit_token, curl, qs, util;

  util = require('util');

  curl = require('../vendor/simple_http').curl;

  qs = require('querystring');

  anagrammit_token = process.env.ANAGRAMMIT_API_TOKEN || 'dev';

  anagrammit_host = process.env.ANAGRAMMIT_HOST || 'localhost';

  anagrammit_port = process.env.ANAGRAMMIT_PORT || 3100;

  module.exports = {
    name: "Anagrammit",
    listen: function(message, room, logger) {
      var body, options, phrase;
      body = message.body;
      if (/pat/i.test(body) && /anagram/i.test(body)) {
        phrase = body.match(/"([^\"]*)"/);
        if (!(phrase && phrase[1].length)) {
          room.speak("You'll have to give me more than that. Make sure you include a phrase in double quotes. e.g.,  \"helloworld\"", logger);
          return;
        }
        phrase = phrase[1];
        console.log("getting anagrams of \"" + phrase + "\"");
        console.log("from " + anagrammit_host + ":" + anagrammit_port + "/token=" + anagrammit_token);
        options = {
          host: anagrammit_host,
          port: anagrammit_port,
          path: "/generate?phrase=" + (qs.escape(phrase)) + "&token=" + (qs.escape(anagrammit_token))
        };
        return curl(options, function(data) {
          var results;
          console.log("results are ready! " + data);
          results = JSON.parse(data);
          if (/success/i.test(results.status)) {
            room.speak("" + results.results.length + " results:");
            return room.paste(results.results.join(' \n'), logger);
          } else {
            return room.speak("there was a problem :( \"" + results.message + "\"", logger);
          }
        });
      }
    }
  };

}).call(this);
